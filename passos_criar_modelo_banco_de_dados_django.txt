Passo 1: Definir o modelo no arquivo models.py do seu aplicativo 
(nome_do_app/models.py)

class Contatos(models.Model):
    nome = models.CharField(max_length=50)
    email = models.EmailField(max_length=75)
    mensagem = models.TextField()
    data = models.DateTimeField(auto_now_add=True) 

from django.db import models

class MinhaClasseModelo(models.Model):
    campo1 = models.CharField(max_length=50)
    campo2 = models.IntegerField()
    campo3 = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.campo1  # Retorna uma representação legível do objeto

Passo 2: Configurar as informações do aplicativo no arquivo settings.py do projeto 
(nome_do_projeto/settings.py)
INSTALLED_APPS = [
    # ...
    'nome_do_app',
    # ...
]

Passo 3: Criar as migrações para o banco de dados
python manage.py makemigrations
python manage.py migrate

Passo 4: Usar o modelo no seu código - você pode fazer isso em suas views, formulários, etc.

from nome_do_app.models import MinhaClasseModelo

# Criar um objeto do modelo
objeto = MinhaClasseModelo(campo1='Valor do campo 1', campo2=42)
objeto.save()  # Salvar o objeto no banco de dados

# Consultar objetos do modelo
todos_os_objetos = MinhaClasseModelo.objects.all()
alguns_objetos = MinhaClasseModelo.objects.filter(campo2=42)

após fazer alterações nos modelos, você precisará criar novas migrações e aplicá-las novamente usando os comandos makemigrations e migrate.

>>> from base.models import Contato
>>> contato1 = Contato()
>>> contato1.nome = "Maria da Silva"
>>> contato1.email = "maria@email.com"
>>> contato1.mensagem = "mensagem de teste"
>>> contato1.save()

